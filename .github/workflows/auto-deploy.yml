name: Auto-Deploy MCP Server

on:
  push:
    branches: [ master ]
    paths:
      - 'src/**'
      - 'package.json'
      - 'tsconfig.json'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        registry-url: 'https://registry.npmjs.org'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run tests
      run: npm test
    
    - name: Build
      run: npm run build
    
    - name: Check if version changed
      id: version-check
      run: |
        currentVersion=$(node -p "require('./package.json').version")
        lastCommit=$(git log --oneline -1)
        if [[ $lastCommit =~ v?[0-9]+\.[0-9]+\.[0-9]+ ]]; then
          echo "version-changed=true" >> $GITHUB_OUTPUT
          echo "current-version=$currentVersion" >> $GITHUB_OUTPUT
        else
          echo "version-changed=false" >> $GITHUB_OUTPUT
          echo "current-version=$currentVersion" >> $GITHUB_OUTPUT
        fi
    
    - name: Auto-increment version
      if: steps.version-check.outputs.version-changed == 'false'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        npm version patch --no-git-tag-version
        newVersion=$(node -p "require('./package.json').version")
        git add package.json
        git commit -m "Auto-increment version to v$newVersion [skip ci]"
        git push
        echo "new-version=$newVersion" >> $GITHUB_OUTPUT
      id: auto-version
    
    - name: Get final version
      id: final-version
      run: |
        if [ "${{ steps.version-check.outputs.version-changed }}" = "true" ]; then
          echo "version=${{ steps.version-check.outputs.current-version }}" >> $GITHUB_OUTPUT
        else
          echo "version=${{ steps.auto-version.outputs.new-version }}" >> $GITHUB_OUTPUT
        fi
    
    - name: Publish to npm
      if: always()
      run: npm publish --access public
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
    
    - name: Create GitHub Release
      if: always()
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v${{ steps.final-version.outputs.version }}
        name: Release v${{ steps.final-version.outputs.version }}
        body: |
          ## What's Changed
          - Auto-deployed React Native MCP Server
          - Enhanced analysis tools and user notifications
          
          ## Installation
          ```bash
          npm install -g @mrnitro360/react-native-mcp-guide@latest
          claude mcp add react-native-guide node "$(npm root -g)/@mrnitro360/react-native-mcp-guide/build/index.js"
          ```
        draft: false
        prerelease: false
