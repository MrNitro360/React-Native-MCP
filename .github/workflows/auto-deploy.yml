name: Build and Publish MCP Server

on:
  push:
    branches: [ master ]
    paths:
      - 'src/**'
      - 'package.json'
      - 'tsconfig.json'
      - '.github/workflows/**'
  workflow_dispatch: # Allow manual triggering

permissions:
  contents: write
  packages: write
  pull-requests: read

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}
        persist-credentials: true
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        registry-url: 'https://registry.npmjs.org'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build project
      run: npm run build
    
    - name: Verify build output
      run: |
        echo "Build completed successfully"
        ls -la build/
        echo "Package contents:"
        node -e "console.log('Main entry:', require('./package.json').main)"
        node -e "console.log('Bin entry:', Object.entries(require('./package.json').bin || {}))"
    
    - name: Check if version should be incremented
      id: version-check
      run: |
        currentVersion=$(node -p "require('./package.json').version")
        lastCommit=$(git log --oneline -1)
        echo "Current version: $currentVersion"
        echo "Last commit: $lastCommit"
        
        # Always increment version for non-automated commits
        if [[ $lastCommit =~ (\[skip\ ci\]|Auto-increment\ version) ]]; then
          echo "version-changed=false" >> $GITHUB_OUTPUT
          echo "should-publish=false" >> $GITHUB_OUTPUT
          echo "current-version=$currentVersion" >> $GITHUB_OUTPUT
          echo "Skipping - automated commit detected"
        else
          echo "version-changed=true" >> $GITHUB_OUTPUT  
          echo "should-publish=true" >> $GITHUB_OUTPUT
          echo "current-version=$currentVersion" >> $GITHUB_OUTPUT
          echo "Will increment version and publish"
        fi
    
    - name: Auto-increment version
      if: steps.version-check.outputs.version-changed == 'true'
      run: |
        # Increment patch version locally (don't commit back)
        npm version patch --no-git-tag-version
        newVersion=$(node -p "require('./package.json').version")
        
        echo "Incremented version to: $newVersion"
        echo "new-version=$newVersion" >> $GITHUB_OUTPUT
      id: auto-version
    
    - name: Get final version for publishing
      id: final-version
      run: |
        if [ "${{ steps.version-check.outputs.version-changed }}" = "true" ]; then
          finalVersion="${{ steps.auto-version.outputs.new-version }}"
        else
          finalVersion="${{ steps.version-check.outputs.current-version }}"
        fi
        echo "version=$finalVersion" >> $GITHUB_OUTPUT
        echo "Final version for publishing: $finalVersion"
    
    - name: Check if version exists on npm
      if: steps.version-check.outputs.should-publish == 'true'
      run: |
        echo "🔍 Checking if version ${{ steps.final-version.outputs.version }} already exists..."
        if npm view @mrnitro360/react-native-mcp-guide@${{ steps.final-version.outputs.version }} version 2>/dev/null; then
          echo "❌ Version ${{ steps.final-version.outputs.version }} already exists on npm"
          echo "This might explain the publish failure"
          npm view @mrnitro360/react-native-mcp-guide versions --json | tail -5
          exit 1
        else
          echo "✅ Version ${{ steps.final-version.outputs.version }} is available for publishing"
        fi
    
    - name: Publish to npm
      if: steps.version-check.outputs.should-publish == 'true'
      run: |
        echo "🔍 Pre-publish verification..."
        echo "NPM registry: $(npm config get registry)"
        echo "Package name: $(node -p "require('./package.json').name")"
        echo "Package version: ${{ steps.final-version.outputs.version }}"
        echo "Package files:"
        npm pack --dry-run
        
        echo "📦 Publishing version ${{ steps.final-version.outputs.version }} to npm..."
        
        # Check if we're authenticated
        if [ -z "$NODE_AUTH_TOKEN" ]; then
          echo "❌ NODE_AUTH_TOKEN is not set"
          exit 1
        fi
        
        # Verify npm whoami works
        npm whoami || echo "Warning: npm whoami failed, but continuing..."
        
        # Publish with verbose output
        npm publish --access public --verbose
        
        echo "✅ Successfully published to npm!"
        echo "🔗 Package URL: https://www.npmjs.com/package/@mrnitro360/react-native-mcp-guide"
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
    
    - name: Create GitHub Release
      if: steps.version-check.outputs.should-publish == 'true'
      uses: softprops/action-gh-release@v2
      with:
        tag_name: v${{ steps.final-version.outputs.version }}
        name: Release v${{ steps.final-version.outputs.version }}
        body: |
          ## 🚀 React Native MCP Server v${{ steps.final-version.outputs.version }}
          
          ### What's New
          - Enhanced React Native analysis and guidance tools
          - Comprehensive security and performance auditing
          - User notification system for updates
          - Auto-deployment via GitHub Actions
          
          ### 📦 Installation Options
          
          **Option 1: Global npm install (Recommended)**
          ```bash
          npm install -g @mrnitro360/react-native-mcp-guide@latest
          claude mcp add react-native-guide node "$(npm root -g)/@mrnitro360/react-native-mcp-guide/build/index.js"
          ```
          
          **Option 2: Direct npm reference**
          ```bash
          claude mcp add react-native-guide npm:@mrnitro360/react-native-mcp-guide@latest
          ```
          
          ### ✅ Verification
          ```bash
          claude mcp list
          # Should show react-native-guide as connected
          ```
          
          ### 🔗 Package Link
          https://www.npmjs.com/package/@mrnitro360/react-native-mcp-guide
        draft: false
        prerelease: false
        generate_release_notes: false
        fail_on_unmatched_files: false
    
    - name: Create Git Tag (fallback)
      if: steps.version-check.outputs.should-publish == 'true' && failure()
      run: |
        git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
        git config --local user.name "github-actions[bot]"
        git tag v${{ steps.final-version.outputs.version }}
        git push origin v${{ steps.final-version.outputs.version }}
        echo "Created git tag as fallback"
    
    - name: Build and Publish Summary
      run: |
        echo "🎉 Build and Publish Summary:"
        echo "✅ Dependencies: Installed"
        echo "✅ TypeScript Build: Successful"
        echo "✅ Version: ${{ steps.final-version.outputs.version }}"
        if [ "${{ steps.version-check.outputs.should-publish }}" = "true" ]; then
          echo "✅ NPM: Published"
          echo "✅ GitHub Release: Created"
          echo "📦 Package: https://www.npmjs.com/package/@mrnitro360/react-native-mcp-guide"
          echo "🏷️ Release: https://github.com/MrNitro360/React-Native-MCP/releases/tag/v${{ steps.final-version.outputs.version }}"
        else
          echo "⏭️ NPM: Skipped (automated version commit)"
          echo "⏭️ Release: Skipped (automated version commit)"
        fi
